# conf/functions.zsh

#
# custom functions
#

# create and move into new directory
function take() {
  mkdir -p $@ && cd ${@:$#}
}

# color man pages
function _termcap_custom_colors() {
  command env \
    LESS_TERMCAP_mb=$(printf "\e[1;34m") \
    LESS_TERMCAP_md=$(printf "\e[1;35m") \
    LESS_TERMCAP_me=$(printf "\e[0m") \
    LESS_TERMCAP_so=$(printf "\e[0;107;30m") \
    LESS_TERMCAP_se=$(printf "\e[0m") \
    LESS_TERMCAP_us=$(printf "\e[1;4;32m") \
    LESS_TERMCAP_ue=$(printf "\e[0m") \
    "$@"
}

function man() {
  _termcap_custom_colors man "$@"
}

# vi mode indicator for prompt
function vi_mode_prompt_info() {
  echo "${${VI_KEYMAP/vicmd/$MODE_INDICATOR}/(main|viins)/}"
}

# python virtualenv for prompt
function virtualenv_prompt_info(){
  [[ -n ${VIRTUAL_ENV} ]] || return
  echo "${ZSH_THEME_VIRTUALENV_PREFIX:=[}${VIRTUAL_ENV:t}${ZSH_THEME_VIRTUALENV_SUFFIX:=]}"
}
export VIRTUAL_ENV_DISABLE_PROMPT=1

# calculate distance between two hex colors using Euclidean formula
# https://en.wikipedia.org/wiki/Color_difference
function color_dist() {
    local color1=($(hex2rgb $1))
    local color2=($(hex2rgb $2))
    local red=$(echo "var=$color1[1]-$color2[1];var*var" | bc)
    local green=$(echo "var=$color1[2]-$color2[2];var*var" | bc)
    local blue=$(echo "var=$color1[3]-$color2[3];var*var" | bc)
    echo "sqrt ( $red + $green + $blue )" | bc
}

# convert rgb color (128 128 128) to hex (808080)
function rgb2hex() { printf "%02x%02x%02x\n" $@ }

# convert hex color (808080) to rgb (128 128 128)
function hex2rgb() { echo $((16#${1:0:2})) $((16#${1:2:2})) $((16#${1:4:2})) }

# get dominant hex color from image
function dominant_color() {
    local infile=$1
    (( ! $+commands[magick] )) && { echo "ImageMagick must be installed"; return 1; }
    if [ -f $infile ]
    then
    local histogram=$(magick $infile -format %c \
        -define histogram:unique-colors=true -depth 8 histogram:info:)
    local color=($(echo $histogram | sort -n | tail -n 1))
    echo ${color[3]:gs/#/}
    fi
}

# vim: set ft=zsh ts=2 sw=0 et:
